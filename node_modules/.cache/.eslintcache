[{"C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\api-usage-example.ts":"3","C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\DataApi\\index.ts":"4"},{"size":169,"mtime":1647255764000,"results":"5","hashOfConfig":"6"},{"size":3809,"mtime":1648061609865,"results":"7","hashOfConfig":"6"},{"size":515,"mtime":1647717280100,"results":"8","hashOfConfig":"6"},{"size":2554,"mtime":1647716888832,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11g1vbm",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\index.tsx",[],"C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\App.tsx",["19","20"],"import { getPeople, getCountries } from \"./DataApi\";\nimport { Country, GetCounriesResponse } from \"DataApi/country.interface\";\nimport { GetPeopleResponse, People } from \"DataApi/people.interface\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { searchCountries } from \"api-usage-example\";\n\nconst App: React.FunctionComponent = () => {\n  const [people, setPeople] = useState<People[]>([]);\n  console.log(\"~ people\", people);\n  const [resetPeople, setResetPeople] = useState<People[]>([]);\n  const [foundResults, setFoundResults] = useState<number>();\n  const [resetFoundResults, setResetFoundResults] = useState<number>();\n  const [totalResults, setTotalResults] = useState<number>();\n  const [resetTotalResults, setResetTotalResults] = useState<number>();\n  const [allCountries, setAllCountries] = useState<Country[]>([]);\n  console.log(\"~ allCountries\", allCountries);\n  useEffect(() => {\n    firstRender();\n  }, []);\n\n  const firstRender = async () => {\n    const getAllPeopleResult = await getPeople({});\n    console.log(\"~ getAllPeopleResult\", getAllPeopleResult);\n    setPeople(getAllPeopleResult.searchResults);\n    setResetPeople(getAllPeopleResult.searchResults);\n    setFoundResults(getAllPeopleResult.searchResultCount);\n    setResetFoundResults(getAllPeopleResult.searchResultCount);\n    setTotalResults(getAllPeopleResult.totalResultCounter);\n    setResetTotalResults(getAllPeopleResult.totalResultCounter);\n    const result: GetCounriesResponse = await searchCountries();\n    setAllCountries(result.searchResults);\n  };\n\n  const age = (birthday: string) => {\n    let today = new Date();\n    let birthdayYear = new Date(birthday).getFullYear();\n    // console.log(\"~ birthdayYear\", birthdayYear);\n    let year = today.getFullYear();\n    // console.log(\"~ year\", year);\n\n    return year - birthdayYear;\n  };\n\n  const changeHandler = async (search: string) => {\n    const people: GetPeopleResponse = await getPeople({ search });\n\n    const countriesObj = allCountries.reduce((map, obj) => {\n      map[obj.alpha2Code] = obj.flag;\n      return map;\n    }, {});\n    console.log(\"ðŸš€ ~ countriesObj\", countriesObj);\n\n    const peopleWithFlag = people.searchResults.map((objP) => {\n      return { ...objP, flag: countriesObj[objP.country] };\n    });\n    console.log(\"ðŸš€ ~ peopleWithFlag\", peopleWithFlag);\n\n    setPeople(peopleWithFlag);\n    setFoundResults(people?.searchResultCount);\n    setTotalResults(people?.totalResultCounter);\n  };\n\n  const debouncedChangeHandler = useCallback(debounce(changeHandler, 300), []);\n\n  return (\n    <div className=\"pageWrapper\">\n      <p>Search Component</p>\n      <input\n        type=\"search\"\n        onChange={(e: React.FormEvent<HTMLInputElement>) => {\n          if (e?.currentTarget?.value.length > 2) {\n            debouncedChangeHandler(e?.currentTarget?.value);\n          } else {\n            console.log(\"LESS THEN 3 CHARS\");\n            setTimeout(() => {\n              setPeople(resetPeople);\n              setFoundResults(resetFoundResults);\n              setTotalResults(resetTotalResults);\n            }, 1000);\n          }\n          // searchPeople(e?.currentTarget?.value); //\n        }}\n      />\n      <p>List Component</p>\n      <div className=\"listWrapper\">\n        {people.map((obj: People) => {\n          return (\n            <div key={obj.id}>\n              <p>\n                {obj.first_name} {obj.last_name}\n              </p>\n              <p>{obj.country}</p>\n              <p>{age(obj.date_of_birth)}</p>\n              <img className=\"flag\" height={50} src=\"Flag src\" alt=\"Flag alt\" />\n            </div>\n          );\n        })}\n      </div>\n      <p>Found results: {foundResults} </p>\n      <p>Total results: {totalResults}</p>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\api-usage-example.ts",[],"C:\\Users\\User\\Desktop\\full\\react-test-master\\react-test-master\\src\\DataApi\\index.ts",[],{"ruleId":"21","severity":1,"message":"22","line":1,"column":21,"nodeType":"23","messageId":"24","endLine":1,"endColumn":33},{"ruleId":"25","severity":1,"message":"26","line":64,"column":34,"nodeType":"23","endLine":64,"endColumn":45},"@typescript-eslint/no-unused-vars","'getCountries' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead."]